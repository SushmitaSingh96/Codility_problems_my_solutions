# you can write to stdout for debugging purposes, e.g.
# print "this is a debug message\n";
use List::Util qw(max);
use strict;
use warnings;

sub solution {
    my ($N)=@_;
    # write your code in Perl 5.18
    if ($N ==1){
        return 0;
    }
    my $c=0;
    my $i;
    for ($i = 1; $N >= 2**$i; $i++){
        if ($N%(2**$i) == 0){
            $c++;
        }
    }
    if($c == $i-1){
        return 0;
    }
    my $flag=0;
    while (!$flag){
        if ($N%2 != 1){
            $N = $N/2;
            next;
        }
        $flag=1;
        last;
    }
    binary_gap(int($N/2), my $count =0, my @total_counts);
}
sub binary_gap{    
    my ($N, $count, @total_counts) = @_;
    #print "$N $count counting";
    if (int($N)==0){
        return max @total_counts;
    }
    my $rem = int($N)%2;
    if ($rem == 1){
        push @total_counts, $count;
        binary_gap(int($N/2), $count=0, @total_counts);
    }
    else{
        $count+=1;
        binary_gap(int($N/2), $count, @total_counts); 
    }
}
